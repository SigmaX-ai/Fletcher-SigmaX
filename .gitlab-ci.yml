image: docker:latest

services:
  - docker:dind

stages:
  - check
  - test
  - examples

.env: &env
  GHDL_IMAGE: ghdl/ghdl
  GHDL_TAG: ubuntu18-llvm-5.0

variables:
  <<: *env

.ghdl-check-job: &ghdl-check-job
  stage: check
  image: $GHDL_IMAGE:$GHDL_TAG
  script:
    - find hardware -name "*.vhd" |
      xargs ghdl -i -v --std=${STD:-08} |
      grep entity |
      sed -e 's/entity //' |
      sed -e 's/ \*\*//' |
      xargs -L 1 ghdl -m --std=${STD:-08} -frelaxed-rules --ieee=synopsys

check-vhdl-93c:
  <<: *ghdl-check-job
  variables:
    <<: *env
    STD: 93c

check-vhdl-08:
  <<: *ghdl-check-job

test-vhdl-08:
  <<: *ghdl-check-job
  stage: test
  allow_failure: true
  script:
    - find hardware -name "*.vhd" |
      xargs ghdl -i -v --std=${STD:-08} |
      grep entity |
      grep _tb |
      sed -e 's/entity //' |
      sed -e 's/ \*\*//' |
      xargs -i -t bash -c '
      ghdl -m --std=${STD:-08} -frelaxed-rules --ieee=synopsys {};
      ghdl -r --std=${STD:-08} --ieee=synopsys {} --stop-time=100ns'

# examples-fletchgen-stringread:
#   image: docker:latest
#   stage: examples
#   script:
#     - docker build -t fletchgen .
#     - docker run -v `pwd`/hardware/test/fletchgen/stringread:/src -v `pwd`/hardware:/hardware -e "FLETCHER_HARDWARE_DIR=/hardware" fletchgen -i src/test.fbs -o src/test_wrapper.vhd -n test -w test_wrapper -s src/test.fbs -d src/test.rb --sim src/sim_top.vhd -x src/test.srec
#     - sed -i -e 's/"src\/test.srec"/"src\/test\/fletchgen\/stringread\/test.srec"/' hardware/test/fletchgen/stringread/sim_top.vhd
#     - docker run -v `pwd`/hardware:/src $GHDL_IMAGE:$GHDL_TAG bash -c "shopt -s globstar && ghdl -i /src/**/*.vhd && ghdl -m --ieee=synopsys sim_top && ghdl -r -v --ieee=synopsys sim_top --stop-time=1ms"
